{"uid":"c9362fea3e00f7b3","name":"新增电梯资料-不传入参数","fullName":"opsPC.test_elevatorResource#test_elevator_add_002","historyId":"671034cf2c3ef0e65c05892eb7ed6797","time":{"start":1690529616646,"stop":1690529616679,"duration":33},"status":"failed","statusMessage":"AssertionError: assert 'Bad Request!' == 'success'\n  - success\n  + Bad Request!","statusTrace":"login_start = {'Authorization': 'Bearer eyJhbGciOiJub25lIn0.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VybmFtZSI6ImFkbWluIiwiZW5hYmxlIjoxLCJtb2JpbGUi...6MzIiLCJsZXZlbCI6MSwid2ViTWVudUxpc3QiOm51bGwsImFwcE1lbnVMaXN0IjpudWxsLCJjcmVhdGVVc2VySWQiOjF9XX0sInN1YiI6ImFkbWluIn0.'}\n\n    @allure.feature(\"运维管理平台\")\n    @allure.story(\"基础资料\")\n    @allure.title(\"新增电梯资料-不传入参数\")\n    @allure.description(\"\")\n    def test_elevator_add_002(login_start):\n            Authorization = login_start\n            method = data[\"elevator_add\"][0][\"Method\"]\n            apiurl = data[\"elevator_add\"][0][\"ApiUrl\"]\n            headers = data[\"elevator_add\"][0][\"Headers\"]\n            # 往请求头里面添加Authorization\n            headers.update(Authorization)\n            # 发送请求\n            response = send_requests(method, apiurl, headers=headers)\n            # 断言\n            assert response['code'] != 0\n>           assert response['msg'] == \"success\"\nE           AssertionError: assert 'Bad Request!' == 'success'\nE             - success\nE             + Bad Request!\n\nopsPC\\test_elevatorResource.py:121: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":12,"retriesStatusChange":false,"beforeStages":[{"name":"login_start","time":{"start":1690529580226,"stop":1690529580337,"duration":111},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 'Bad Request!' == 'success'\n  - success\n  + Bad Request!","statusTrace":"login_start = {'Authorization': 'Bearer eyJhbGciOiJub25lIn0.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VybmFtZSI6ImFkbWluIiwiZW5hYmxlIjoxLCJtb2JpbGUi...6MzIiLCJsZXZlbCI6MSwid2ViTWVudUxpc3QiOm51bGwsImFwcE1lbnVMaXN0IjpudWxsLCJjcmVhdGVVc2VySWQiOjF9XX0sInN1YiI6ImFkbWluIn0.'}\n\n    @allure.feature(\"运维管理平台\")\n    @allure.story(\"基础资料\")\n    @allure.title(\"新增电梯资料-不传入参数\")\n    @allure.description(\"\")\n    def test_elevator_add_002(login_start):\n            Authorization = login_start\n            method = data[\"elevator_add\"][0][\"Method\"]\n            apiurl = data[\"elevator_add\"][0][\"ApiUrl\"]\n            headers = data[\"elevator_add\"][0][\"Headers\"]\n            # 往请求头里面添加Authorization\n            headers.update(Authorization)\n            # 发送请求\n            response = send_requests(method, apiurl, headers=headers)\n            # 断言\n            assert response['code'] != 0\n>           assert response['msg'] == \"success\"\nE           AssertionError: assert 'Bad Request!' == 'success'\nE             - success\nE             + Bad Request!\n\nopsPC\\test_elevatorResource.py:121: AssertionError","steps":[],"attachments":[{"uid":"bb456006ba7be6d2","name":"log","source":"bb456006ba7be6d2.txt","type":"text/plain","size":1848}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"feature","value":"运维管理平台"},{"name":"story","value":"基础资料"},{"name":"parentSuite","value":"opsPC"},{"name":"suite","value":"test_elevatorResource"},{"name":"host","value":"cale"},{"name":"thread","value":"11532-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"opsPC.test_elevatorResource"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5bff92c2228e094c","status":"failed","statusDetails":"AssertionError: assert 400 == 0","time":{"start":1690436273600,"stop":1690436273616,"duration":16}},{"uid":"efadc8110f4d32df","status":"failed","statusDetails":"AssertionError: assert 400 == 0","time":{"start":1690421470127,"stop":1690421470152,"duration":25}},{"uid":"afcd758cab2c32c5","status":"failed","statusDetails":"AssertionError: assert 400 == 0","time":{"start":1690334738994,"stop":1690334739032,"duration":38}},{"uid":"d35a4502a75ede7a","status":"failed","statusDetails":"AssertionError: assert 400 == 0","time":{"start":1690256285170,"stop":1690256285185,"duration":15}},{"uid":"2f5a8c7d36ae2841","status":"failed","statusDetails":"AssertionError: assert 400 == 0","time":{"start":1690253011978,"stop":1690253012010,"duration":32}},{"uid":"5d50940f86aadcf1","status":"failed","statusDetails":"AssertionError: assert 400 == 0","time":{"start":1690249608059,"stop":1690249608089,"duration":30}},{"uid":"65c3b1f869b04692","status":"failed","statusDetails":"AssertionError: assert 400 == 0","time":{"start":1690185372268,"stop":1690185372293,"duration":25}},{"uid":"92c06fbdea66dfc8","status":"failed","statusDetails":"AssertionError: assert 400 == 0","time":{"start":1689845591180,"stop":1689845591210,"duration":30}},{"uid":"e7401d64dcd47df2","status":"failed","statusDetails":"AssertionError: assert 400 == 0","time":{"start":1689836694281,"stop":1689836694313,"duration":32}},{"uid":"cd2577e4ef47741d","status":"failed","statusDetails":"AssertionError: assert 400 == 0","time":{"start":1689755121249,"stop":1689755121270,"duration":21}},{"uid":"8895d8f45a3687e3","status":"failed","statusDetails":"AssertionError: assert 400 == 0","time":{"start":1689669166020,"stop":1689669166065,"duration":45}},{"uid":"c3305b54d99835cb","status":"failed","statusDetails":"AssertionError: assert 400 == 0","time":{"start":1689580095332,"stop":1689580095357,"duration":25}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c9362fea3e00f7b3.json","parameterValues":[]}