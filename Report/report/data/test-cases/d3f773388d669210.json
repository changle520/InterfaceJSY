{"uid":"d3f773388d669210","name":"视频监测终端：设备解绑","fullName":"opsPC.test_deviceManage#test_elevator_device_bind_delete_001","historyId":"515007d007de585944b0136aecaaf2c4","time":{"start":1692349405658,"stop":1692349405712,"duration":54},"status":"failed","statusMessage":"AssertionError: assert 500 == 0","statusTrace":"login_start = {'Authorization': 'Bearer eyJhbGciOiJub25lIn0.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VybmFtZSI6ImFkbWluIiwiZW5hYmxlIjoxLCJtb2JpbGUi...6MzIiLCJsZXZlbCI6MSwid2ViTWVudUxpc3QiOm51bGwsImFwcE1lbnVMaXN0IjpudWxsLCJjcmVhdGVVc2VySWQiOjF9XX0sInN1YiI6ImFkbWluIn0.'}\n\n    @allure.feature(\"运维管理平台\")\n    @allure.story(\"设备管理\")\n    @allure.title(\"视频监测终端：设备解绑\")\n    @allure.description(\"\")\n    def test_elevator_device_bind_delete_001(login_start):\n            Authorization =login_start\n            method=data[\"elevator_device_bind_delete\"][0][\"Method\"]\n            apiurl=data[\"elevator_device_bind_delete\"][0][\"ApiUrl\"]\n            headers=data[\"elevator_device_bind_delete\"][0][\"Headers\"]\n            params=data[\"elevator_device_bind_delete\"][0][\"Params\"]\n            #往请求头里面添加Authorization\n            headers.update(Authorization)\n            #发送请求\n            response=send_requests(method,apiurl,headers=headers,data=params)\n            #断言\n>           assert response['code']==0\nE           assert 500 == 0\n\nopsPC\\test_deviceManage.py:649: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":7,"retriesStatusChange":false,"beforeStages":[{"name":"login_start","time":{"start":1692349370803,"stop":1692349371071,"duration":268},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"device_version_add_setup","time":{"start":1692349391430,"stop":1692349391505,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 0","statusTrace":"login_start = {'Authorization': 'Bearer eyJhbGciOiJub25lIn0.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VybmFtZSI6ImFkbWluIiwiZW5hYmxlIjoxLCJtb2JpbGUi...6MzIiLCJsZXZlbCI6MSwid2ViTWVudUxpc3QiOm51bGwsImFwcE1lbnVMaXN0IjpudWxsLCJjcmVhdGVVc2VySWQiOjF9XX0sInN1YiI6ImFkbWluIn0.'}\n\n    @allure.feature(\"运维管理平台\")\n    @allure.story(\"设备管理\")\n    @allure.title(\"视频监测终端：设备解绑\")\n    @allure.description(\"\")\n    def test_elevator_device_bind_delete_001(login_start):\n            Authorization =login_start\n            method=data[\"elevator_device_bind_delete\"][0][\"Method\"]\n            apiurl=data[\"elevator_device_bind_delete\"][0][\"ApiUrl\"]\n            headers=data[\"elevator_device_bind_delete\"][0][\"Headers\"]\n            params=data[\"elevator_device_bind_delete\"][0][\"Params\"]\n            #往请求头里面添加Authorization\n            headers.update(Authorization)\n            #发送请求\n            response=send_requests(method,apiurl,headers=headers,data=params)\n            #断言\n>           assert response['code']==0\nE           assert 500 == 0\n\nopsPC\\test_deviceManage.py:649: AssertionError","steps":[],"attachments":[{"uid":"a18ece7012d99c91","name":"log","source":"a18ece7012d99c91.txt","type":"text/plain","size":1924}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"device_version_add_setup::0","time":{"start":1692349410078,"stop":1692349410204,"duration":126},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"运维管理平台"},{"name":"story","value":"设备管理"},{"name":"parentSuite","value":"opsPC"},{"name":"suite","value":"test_deviceManage"},{"name":"host","value":"cale"},{"name":"thread","value":"7716-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"opsPC.test_deviceManage"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3269f1bb0893f965","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1692326126118,"stop":1692326126171,"duration":53}},{"uid":"e9bd122332931689","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1692260223625,"stop":1692260223680,"duration":55}},{"uid":"c18263180f349a34","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1692256576380,"stop":1692256576430,"duration":50}},{"uid":"90248cbe2eed2aea","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1692236250588,"stop":1692236250643,"duration":55}},{"uid":"52600ce241610458","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1692178378478,"stop":1692178378536,"duration":58}},{"uid":"ed375e9c4181d782","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1692069116520,"stop":1692069116566,"duration":46}},{"uid":"602b5b8df89623c3","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1691638777927,"stop":1691638777975,"duration":48}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"d3f773388d669210.json","parameterValues":[]}