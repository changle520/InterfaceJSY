{"uid":"ff0f4098f039011b","name":"视频监测终端：设备解绑","fullName":"opsPC.test_deviceManage#test_elevator_device_bind_delete_001","historyId":"515007d007de585944b0136aecaaf2c4","time":{"start":1690529612278,"stop":1690529612326,"duration":48},"status":"failed","statusMessage":"AssertionError: assert 500 == 0","statusTrace":"login_start = {'Authorization': 'Bearer eyJhbGciOiJub25lIn0.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VybmFtZSI6ImFkbWluIiwiZW5hYmxlIjoxLCJtb2JpbGUi...6MzIiLCJsZXZlbCI6MSwid2ViTWVudUxpc3QiOm51bGwsImFwcE1lbnVMaXN0IjpudWxsLCJjcmVhdGVVc2VySWQiOjF9XX0sInN1YiI6ImFkbWluIn0.'}\n\n    @allure.feature(\"运维管理平台\")\n    @allure.story(\"设备管理\")\n    @allure.title(\"视频监测终端：设备解绑\")\n    @allure.description(\"\")\n    def test_elevator_device_bind_delete_001(login_start):\n            Authorization =login_start\n            method=data[\"elevator_device_bind_delete\"][0][\"Method\"]\n            apiurl=data[\"elevator_device_bind_delete\"][0][\"ApiUrl\"]\n            headers=data[\"elevator_device_bind_delete\"][0][\"Headers\"]\n            params=data[\"elevator_device_bind_delete\"][0][\"Params\"]\n            #往请求头里面添加Authorization\n            headers.update(Authorization)\n            #发送请求\n            response=send_requests(method,apiurl,headers=headers,data=params)\n            #断言\n>           assert response['code']==0\nE           assert 500 == 0\n\nopsPC\\test_deviceManage.py:649: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":11,"retriesStatusChange":false,"beforeStages":[{"name":"login_start","time":{"start":1690529580226,"stop":1690529580337,"duration":111},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"device_version_add_setup","time":{"start":1690529601338,"stop":1690529601392,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 0","statusTrace":"login_start = {'Authorization': 'Bearer eyJhbGciOiJub25lIn0.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VybmFtZSI6ImFkbWluIiwiZW5hYmxlIjoxLCJtb2JpbGUi...6MzIiLCJsZXZlbCI6MSwid2ViTWVudUxpc3QiOm51bGwsImFwcE1lbnVMaXN0IjpudWxsLCJjcmVhdGVVc2VySWQiOjF9XX0sInN1YiI6ImFkbWluIn0.'}\n\n    @allure.feature(\"运维管理平台\")\n    @allure.story(\"设备管理\")\n    @allure.title(\"视频监测终端：设备解绑\")\n    @allure.description(\"\")\n    def test_elevator_device_bind_delete_001(login_start):\n            Authorization =login_start\n            method=data[\"elevator_device_bind_delete\"][0][\"Method\"]\n            apiurl=data[\"elevator_device_bind_delete\"][0][\"ApiUrl\"]\n            headers=data[\"elevator_device_bind_delete\"][0][\"Headers\"]\n            params=data[\"elevator_device_bind_delete\"][0][\"Params\"]\n            #往请求头里面添加Authorization\n            headers.update(Authorization)\n            #发送请求\n            response=send_requests(method,apiurl,headers=headers,data=params)\n            #断言\n>           assert response['code']==0\nE           assert 500 == 0\n\nopsPC\\test_deviceManage.py:649: AssertionError","steps":[],"attachments":[{"uid":"2607a1b8fdb809a4","name":"log","source":"2607a1b8fdb809a4.txt","type":"text/plain","size":1924}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"device_version_add_setup::0","time":{"start":1690529616206,"stop":1690529616330,"duration":124},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"story","value":"设备管理"},{"name":"feature","value":"运维管理平台"},{"name":"parentSuite","value":"opsPC"},{"name":"suite","value":"test_deviceManage"},{"name":"host","value":"cale"},{"name":"thread","value":"11532-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"opsPC.test_deviceManage"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"649d34ebb2a36ec4","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1690436269233,"stop":1690436269271,"duration":38}},{"uid":"992af2517ebc8fd8","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1690421461360,"stop":1690421461534,"duration":174}},{"uid":"f1d31c90229c2fc2","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1690334734449,"stop":1690334734494,"duration":45}},{"uid":"22fc8e814939ad55","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1690256280775,"stop":1690256280836,"duration":61}},{"uid":"a0c63ff32f63dd7e","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1690253005230,"stop":1690253005277,"duration":47}},{"uid":"ace0e5d02cce48f9","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1690249603419,"stop":1690249603474,"duration":55}},{"uid":"2048c865e2d75547","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1690185367894,"stop":1690185367935,"duration":41}},{"uid":"919b620ab7d50bed","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1689845586410,"stop":1689845586463,"duration":53}},{"uid":"f8ffed1fb8f8fc72","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1689836686239,"stop":1689836686287,"duration":48}},{"uid":"bd0607a62fccc7bc","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1689755116718,"stop":1689755116772,"duration":54}},{"uid":"fbb19ad4653de2de","status":"failed","statusDetails":"AssertionError: assert 500 == 0","time":{"start":1689669162298,"stop":1689669162351,"duration":53}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ff0f4098f039011b.json","parameterValues":[]}