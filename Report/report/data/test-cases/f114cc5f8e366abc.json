{"uid":"f114cc5f8e366abc","name":"困人报警统计-传入错误的参数值","fullName":"opsPC.test_homePage#test_lockEvent_count_003","historyId":"9a09ab0c4332d36ae69ace6ff3c46c75","time":{"start":1692349421969,"stop":1692349422268,"duration":299},"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = len([{'count': 11, 'date': '08-18', 'secondCount': None}])","statusTrace":"login_start = {'Authorization': 'Bearer eyJhbGciOiJub25lIn0.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VybmFtZSI6ImFkbWluIiwiZW5hYmxlIjoxLCJtb2JpbGUi...6MzIiLCJsZXZlbCI6MSwid2ViTWVudUxpc3QiOm51bGwsImFwcE1lbnVMaXN0IjpudWxsLCJjcmVhdGVVc2VySWQiOjF9XX0sInN1YiI6ImFkbWluIn0.'}\n\n    @allure.feature(\"运维管理平台\")\n    @allure.story(\"首页\")\n    @allure.title(\"困人报警统计-传入错误的参数值\")\n    @allure.description(\"\")\n    def test_lockEvent_count_003(login_start):\n            Authorization =login_start\n            method=data[\"lockEvent_count\"][2][\"Method\"]\n            apiurl=data[\"lockEvent_count\"][2][\"ApiUrl\"]\n            headers=data[\"lockEvent_count\"][2][\"Headers\"]\n            params = data[\"lockEvent_count\"][2][\"Params\"]\n            #往请求头里面添加Authorization\n            headers.update(Authorization)\n            #发送请求\n            response=send_requests(method,apiurl,headers=headers,params=params)\n            #断言\n            assert response['code'] == 0\n            assert response['msg'] == \"success\"\n>           assert len(response['data']) == 0\nE           AssertionError: assert 1 == 0\nE            +  where 1 = len([{'count': 11, 'date': '08-18', 'secondCount': None}])\n\nopsPC\\test_homePage.py:372: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":7,"retriesStatusChange":true,"beforeStages":[{"name":"login_start","time":{"start":1692349370803,"stop":1692349371071,"duration":268},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = len([{'count': 11, 'date': '08-18', 'secondCount': None}])","statusTrace":"login_start = {'Authorization': 'Bearer eyJhbGciOiJub25lIn0.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VybmFtZSI6ImFkbWluIiwiZW5hYmxlIjoxLCJtb2JpbGUi...6MzIiLCJsZXZlbCI6MSwid2ViTWVudUxpc3QiOm51bGwsImFwcE1lbnVMaXN0IjpudWxsLCJjcmVhdGVVc2VySWQiOjF9XX0sInN1YiI6ImFkbWluIn0.'}\n\n    @allure.feature(\"运维管理平台\")\n    @allure.story(\"首页\")\n    @allure.title(\"困人报警统计-传入错误的参数值\")\n    @allure.description(\"\")\n    def test_lockEvent_count_003(login_start):\n            Authorization =login_start\n            method=data[\"lockEvent_count\"][2][\"Method\"]\n            apiurl=data[\"lockEvent_count\"][2][\"ApiUrl\"]\n            headers=data[\"lockEvent_count\"][2][\"Headers\"]\n            params = data[\"lockEvent_count\"][2][\"Params\"]\n            #往请求头里面添加Authorization\n            headers.update(Authorization)\n            #发送请求\n            response=send_requests(method,apiurl,headers=headers,params=params)\n            #断言\n            assert response['code'] == 0\n            assert response['msg'] == \"success\"\n>           assert len(response['data']) == 0\nE           AssertionError: assert 1 == 0\nE            +  where 1 = len([{'count': 11, 'date': '08-18', 'secondCount': None}])\n\nopsPC\\test_homePage.py:372: AssertionError","steps":[],"attachments":[{"uid":"2b24b7741d7a7bee","name":"log","source":"2b24b7741d7a7bee.txt","type":"text/plain","size":1972}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"story","value":"首页"},{"name":"feature","value":"运维管理平台"},{"name":"parentSuite","value":"opsPC"},{"name":"suite","value":"test_homePage"},{"name":"host","value":"cale"},{"name":"thread","value":"7716-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"opsPC.test_homePage"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"454437d15e8b040f","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = len([{'count': 2, 'date': '08-18', 'secondCount': None}])","time":{"start":1692326143738,"stop":1692326144072,"duration":334}},{"uid":"cdbb7fb226ccc58f","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = len([{'count': 11, 'date': '08-17', 'secondCount': None}])","time":{"start":1692260245462,"stop":1692260245782,"duration":320}},{"uid":"6824ebfd28304f79","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = len([{'count': 5, 'date': '08-17', 'secondCount': None}])","time":{"start":1692256596888,"stop":1692256597189,"duration":301}},{"uid":"78ad33829d1d2f6e","status":"passed","time":{"start":1692236268004,"stop":1692236268331,"duration":327}},{"uid":"7bcab693b7c30d9e","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = len([{'count': 1, 'date': '08-16', 'secondCount': None}])","time":{"start":1692178395622,"stop":1692178395933,"duration":311}},{"uid":"42cc99d9aea7f346","status":"passed","time":{"start":1692069133021,"stop":1692069133391,"duration":370}},{"uid":"cb4dde5a0cd4203a","status":"passed","time":{"start":1691638792186,"stop":1691638792490,"duration":304}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f114cc5f8e366abc.json","parameterValues":[]}