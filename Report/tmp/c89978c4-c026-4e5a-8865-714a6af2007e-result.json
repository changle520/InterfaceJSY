{"name": "开门走梯-上报", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "@allure.feature(\"JTC340梯联测试\")\n    @allure.story(\"电梯事件上报-故障告警\")\n    @allure.title(\"开门走梯-上报\")\n    @allure.description(\"\")\n    def test_ErrorEvent_post_002():\n        msg = data['msg']['ErrorEvent_post'][1]\n        #获取当前时间的字符串格式并赋值给msg\n        ErrorTime=get_datetime()\n        msg['Params']['Value']['ErrorTime']=ErrorTime\n    \n        run(\"ErrorEvent_post\",msg,productKey,deviceName)\n        # 从文件中获取订阅到的消息并转换为字典对象\n        msg_str = read_submsg()\n>       msg_data = get_msg_sub(msg_str)\n\ndevice\\test_JTC340.py:162: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\mqtt\\get_msg.py:18: in get_msg_sub\n    return json.loads(msg)\nD:\\tool\\python\\lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\nD:\\tool\\python\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0000024BDC5B63B0>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nD:\\tool\\python\\lib\\json\\decoder.py:355: JSONDecodeError"}, "attachments": [{"name": "log", "source": "c89bbdec-20a4-4eb9-a60b-0feaf27dcab8-attachment.txt", "type": "text/plain"}], "start": 1692688720702, "stop": 1692688725919, "uuid": "b113b8ff-6e91-44ca-a4ee-5c2ffd738f9c", "historyId": "6a7acbd8ac6aa495a4f7f4ca5acd0e91", "testCaseId": "f376d28cf069fc4cd2c33c187ee2f959", "fullName": "device.test_JTC340#test_ErrorEvent_post_002", "labels": [{"name": "feature", "value": "JTC340梯联测试"}, {"name": "story", "value": "电梯事件上报-故障告警"}, {"name": "parentSuite", "value": "device"}, {"name": "suite", "value": "test_JTC340"}, {"name": "host", "value": "cale"}, {"name": "thread", "value": "12784-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "device.test_JTC340"}]}