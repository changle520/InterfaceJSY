{"name": "设置梯联属性-检测参数", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "@allure.feature(\"JTC340梯联测试\")\n    @allure.story(\"属性设置\")\n    @allure.title(\"设置梯联属性-检测参数\")\n    @allure.description(\"\")\n    def test_set_property_JTC340_001():\n          msg = data['msg']['set_property_JTC340'][0]\n          run(\"set_property\",msg,productKey,deviceName)\n          #从文件中获取订阅到的消息并转换为字典对象,productKey,deviceName\n          msg_str=read_submsg()\n>         msg_data=get_msg_sub(msg_str)\n\ndevice\\test_JTC340.py:541: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mqtt\\get_msg.py:18: in get_msg_sub\n    return json.loads(msg)\nD:\\tool\\python\\lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\nD:\\tool\\python\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x00000294C45E6470>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nD:\\tool\\python\\lib\\json\\decoder.py:355: JSONDecodeError"}, "attachments": [{"name": "log", "source": "a7d7ea00-0533-4e47-9f62-acc3e977cf12-attachment.txt", "type": "text/plain"}], "start": 1692689015747, "stop": 1692689018812, "uuid": "899aca83-8f1a-48bc-bb06-0daaa28ff006", "historyId": "99cc53302a124676d3c4da10ed739fdf", "testCaseId": "09a479569947c787d34e67f790697619", "fullName": "device.test_JTC340#test_set_property_JTC340_001", "labels": [{"name": "feature", "value": "JTC340梯联测试"}, {"name": "story", "value": "属性设置"}, {"name": "parentSuite", "value": "device"}, {"name": "suite", "value": "test_JTC340"}, {"name": "host", "value": "cale"}, {"name": "thread", "value": "13204-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "device.test_JTC340"}]}