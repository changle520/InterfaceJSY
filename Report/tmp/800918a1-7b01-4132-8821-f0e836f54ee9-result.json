{"name": "一键呼救统计-传入错误的参数值", "status": "failed", "statusDetails": {"message": "AssertionError: assert 1 == 0\n +  where 1 = len([{'count': 1, 'date': '08-22'}])", "trace": "login_start = {'Authorization': 'Bearer eyJhbGciOiJub25lIn0.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VybmFtZSI6ImFkbWluIiwiZW5hYmxlIjoxLCJtb2JpbGUi...6MzIiLCJsZXZlbCI6MSwid2ViTWVudUxpc3QiOm51bGwsImFwcE1lbnVMaXN0IjpudWxsLCJjcmVhdGVVc2VySWQiOjF9XX0sInN1YiI6ImFkbWluIn0.'}\n\n    @allure.feature(\"运维管理平台\")\n    @allure.story(\"首页\")\n    @allure.title(\"一键呼救统计-传入错误的参数值\")\n    @allure.description(\"\")\n    def test_callRecord_count_003(login_start):\n            Authorization =login_start\n            method=data[\"callRecord_count\"][2][\"Method\"]\n            apiurl=data[\"callRecord_count\"][2][\"ApiUrl\"]\n            headers=data[\"callRecord_count\"][2][\"Headers\"]\n            params = data[\"callRecord_count\"][2][\"Params\"]\n            #往请求头里面添加Authorization\n            headers.update(Authorization)\n            #发送请求\n            response=send_requests(method,apiurl,headers=headers,params=params)\n            #断言\n            assert response['code'] == 0\n            assert response['msg'] == \"success\"\n>           assert len(response['data']) == 0\nE           AssertionError: assert 1 == 0\nE            +  where 1 = len([{'count': 1, 'date': '08-22'}])\n\nopsPC\\test_homePage.py:444: AssertionError"}, "attachments": [{"name": "log", "source": "43f2723b-bb49-4220-a727-1b8c9546c1b8-attachment.txt", "type": "text/plain"}], "start": 1692689163213, "stop": 1692689163314, "uuid": "5132fc4c-fa4b-4ab6-88db-459dc39fe1d6", "historyId": "58d53ee22002b9b497e4d451f228f041", "testCaseId": "2dcd49077c70bc638412cf395f619231", "fullName": "opsPC.test_homePage#test_callRecord_count_003", "labels": [{"name": "story", "value": "首页"}, {"name": "feature", "value": "运维管理平台"}, {"name": "parentSuite", "value": "opsPC"}, {"name": "suite", "value": "test_homePage"}, {"name": "host", "value": "cale"}, {"name": "thread", "value": "13204-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "opsPC.test_homePage"}]}