{"name": "困人事件回放", "status": "failed", "statusDetails": {"message": "AssertionError: assert 20008 == 0", "trace": "login_start = {'Authorization': 'Bearer eyJhbGciOiJub25lIn0.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VybmFtZSI6ImFkbWluIiwiZW5hYmxlIjoxLCJtb2JpbGUi...6MzIiLCJsZXZlbCI6MSwid2ViTWVudUxpc3QiOm51bGwsImFwcE1lbnVMaXN0IjpudWxsLCJjcmVhdGVVc2VySWQiOjF9XX0sInN1YiI6ImFkbWluIn0.'}\nget_elevatorId_setup = {'elevatorId': 1918, 'id': 164870}\n\n    @allure.feature(\"运维管理平台\")\n    @allure.story(\"应急处置\")\n    @allure.title(\"困人事件回放\")\n    @allure.description(\"\")\n    def test_device_error_trapped_video_replay_001(login_start,get_elevatorId_setup):\n            Authorization =login_start\n            method=data[\"device_error_trapped_video_replay\"][0][\"Method\"]\n            apiurl=data[\"device_error_trapped_video_replay\"][0][\"ApiUrl\"]\n            headers=data[\"device_error_trapped_video_replay\"][0][\"Headers\"]\n            params=data[\"device_error_trapped_video_replay\"][0][\"Params\"]\n            params['id']=get_elevatorId_setup['id']\n            #往请求头里面添加Authorization\n            headers.update(Authorization)\n            #发送请求\n            recordid=get_elevator_call_recordId_setup\n            response=send_requests(method,apiurl,headers=headers,params=params)\n            #断言\n>           assert response['code']==0\nE           assert 20008 == 0\n\nopsPC\\test_emergency.py:401: AssertionError"}, "attachments": [{"name": "log", "source": "fd6af891-9168-4217-ab8a-8a8cb77d8da0-attachment.txt", "type": "text/plain"}], "start": 1692326138681, "stop": 1692326138752, "uuid": "a7d897ca-cd8d-46ae-b9ba-1954ea8b08b8", "historyId": "573010e86cab1a3d90647b98551bd886", "testCaseId": "8a4e3003043ec7852cf822ca71790ce0", "fullName": "opsPC.test_emergency#test_device_error_trapped_video_replay_001", "labels": [{"name": "feature", "value": "运维管理平台"}, {"name": "story", "value": "应急处置"}, {"name": "parentSuite", "value": "opsPC"}, {"name": "suite", "value": "test_emergency"}, {"name": "host", "value": "cale"}, {"name": "thread", "value": "8932-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "opsPC.test_emergency"}]}